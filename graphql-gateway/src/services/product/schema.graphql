type Query {
  product(id: ID!): Product
  productsConnection(first: Int!, after: String): ProductsConnection!
}

type Mutation {
  favoriteProduct(input: FavoriteProductInput!): FavoriteProductPayload!
  unfavoriteProduct(input: UnfavoriteProductInput!): UnfavoriteProductPayload!
}

input FavoriteProductInput {
  clientMutationId: String
  productId: ID!
}

type FavoriteProductPayload {
  clientMutationId: String
  product: Product!
}

input UnfavoriteProductInput {
  clientMutationId: String
  productId: ID!
}

type UnfavoriteProductPayload {
  clientMutationId: String
  product: Product!
}

type Product {
  id: ID!
  title: String!
  seller: User!
  favorites: Int!
}

type ProductsConnection {
  nodes: [Product!]!
  totalCount: Int!
  pageInfo: PageInfo!
}
